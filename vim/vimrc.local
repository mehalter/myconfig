""" Personal preferences
set mouse=a                     " Enable mouse
set background=dark             " Dark background
let g:solarized_termtrans = 1   " solarized transparency
silent! colorscheme solarized8  " Use solarized color scheme

""" Gui preferences
if has("gui_running")
    set guifont="Source Code Pro for Powerline":h12
    "set guifont="Fira Code":h12
endif

""" Plugin preferences
let g:C_Ctrl_j = "off"          " disable Ctrl-J from c.vim

""" Key bindings
nnoremap <leader>l <c-^>            " Use Tab for switching buffers
nnoremap <Tab> :bn<CR>
noremap <S-Tab> :bp<CR>
set foldmethod=syntax           " Fold por sintaxis
set foldnestmax=1               " Maximo de folds internos
set foldminlines=3              " Minimo de lineas para realizar fold
set foldlevel=99                " Start unfolded"
map F za                        " Abrir y cerrar folds con shift+F

nnoremap <leader>p :set invpaste paste?<CR>
set pastetoggle=<leader>p

" Uncrustify
let g:uncrustify_cfg_file_path = 'uncrustify.cfg'

" ale
let g:ale_linter_aliases = {'svelte': ['css', 'javascript']}

:call extend(g:ale_linters, {
    \ 'c': ['clang'],
    \'javascript': ['eslint'], 
    \'typescript': ['tsserver', 'eslint'],
    \'svelte': ['eslint'],
    \'rust': ['rls'], })


let g:ale_fixers = {
\   'css': ['prettier'],
\   'javascript': ['eslint', 'prettier'],
\   'svelte': ['eslint', 'prettier'],
\   'typescript': ['eslint', 'prettier'],
\   'rust': ['rustfmt'] }

let g:ale_fix_on_save = 1
let g:ale_c_parse_compile_commands = 1
let g:ale_c_uncrustify_options = '-c ' . g:uncrustify_cfg_file_path

" Uncrustfy commands
autocmd FileType c noremap <buffer> <c-f> :call Uncrustify('c')<CR>
autocmd FileType c vnoremap <buffer> <c-f> :call RangeUncrustify('c')<CR>
autocmd FileType cpp noremap <buffer> <c-f> :call Uncrustify('cpp')<CR>
autocmd FileType cpp vnoremap <buffer> <c-f> :call RangeUncrustify('cpp')<CR>

" Search tags in current buffer
nnoremap <silent> <leader>t :BTags<CR>

" List of recently opened files
nnoremap <silent> <leader>r :History<CR>
